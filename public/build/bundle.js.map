{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/ui/canvas/Palette.svelte","../../src/ui/canvas/Coordinates.svelte","../../src/ui/canvas/SwitchPlacement.svelte","../../src/ui/canvas/Chat.svelte","../../src/ui/esc/Esc.svelte","../../src/ui/esc/EscWinNavs.svelte","../../src/ui/misc/Welcome.svelte","../../src/ui/misc/Settings.svelte","../../src/ui/misc/Credits.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.49.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","<div id=\"palette\" class=\"box\">\r\n\t<div style=\"background:#FFFFFF;\"/>\r\n\t<div style=\"background:#AAAAAA;\"/>\r\n\t<div style=\"background:#888888;\"/>\r\n\t<div style=\"background:#484848;\"/>\r\n\t<div style=\"background:#000000;\"/>\r\n\t<div style=\"background:#991609;\"/>\r\n\t<div style=\"background:#DF250B;\"/>\r\n\t<div style=\"background:#FF5610;\"/>\r\n\t<div style=\"background:#FF832A;\"/>\r\n\t<div style=\"background:#FFB885;\"/>\r\n\t<div style=\"background:#936100;\"/>\r\n\t<div style=\"background:#E29705;\"/>\r\n\t<div style=\"background:#FFD223;\"/>\r\n\t<div style=\"background:#FFF7AF;\"/>\r\n\t<div style=\"background:#47561E;\"/>\r\n\t<div style=\"background:#71892B;\"/>\r\n\t<div style=\"background:#94BE1A;\"/>\r\n\t<div style=\"background:#DCFF77;\"/>\r\n\t<div style=\"background:#124B36;\"/>\r\n\t<div style=\"background:#0F8158;\"/>\r\n\t<div style=\"background:#03C07C;\"/>\r\n\t<div style=\"background:#90FFCA;\"/>\r\n\t<div style=\"background:#024851;\"/>\r\n\t<div style=\"background:#0D7A89;\"/>\r\n\t<div style=\"background:#01A6BD;\"/>\r\n\t<div style=\"background:#34E7FF;\"/>\r\n\t<div style=\"background:#013462;\"/>\r\n\t<div style=\"background:#0D569A;\"/>\r\n\t<div style=\"background:#066ECE;\"/>\r\n\t<div style=\"background:#4CA9FF;\"/>\r\n\t<div style=\"background:#181691;\"/>\r\n\t<div style=\"background:#2A25F5;\"/>\r\n\t<div style=\"background:#4E55FF;\"/>\r\n\t<div style=\"background:#9DB8FF;\"/>\r\n\t<div style=\"background:#58196B;\"/>\r\n\t<div style=\"background:#AC01E0;\"/>\r\n\t<div style=\"background:#C82EF7;\"/>\r\n\t<div style=\"background:#DC91FF;\"/>\r\n\t<div style=\"background:#650036;\"/>\r\n\t<div style=\"background:#B0114B;\"/>\r\n\t<div style=\"background:#EA3477;\"/>\r\n\t<div style=\"background:#FF95BC;\"/>\r\n\t<div style=\"background:#62071D;\"/>\r\n\t<div style=\"background:#9B0834;\"/>\r\n\t<div style=\"background:#CB003D;\"/>\r\n\t<div style=\"background:#FF7384;\"/>\r\n\t<div style=\"background:#49230A;\"/>\r\n\t<div style=\"background:#814A17;\"/>\r\n\t<div style=\"background:#D17A2B;\"/>\r\n\t<div style=\"background:#FFB470;\"/>\r\n</div>","<div id=\"coordinates\" class=\"box\">\r\n\t<div id=\"coords\">x: 0, y: 0, z:0</div>\r\n</div>","<div id=\"switchPlacement\" class=\"box\">\r\n\t<button id=\"placeAtRaycast\" class=\"icoButton ico\"><img src=\"./images/icons/place at raycast.svg\" alt=\"place at raycast\"></button>\r\n\t<button id=\"placeInCamera\" class=\"icoButton ico\"><img src=\"./images/icons/place in camera.svg\" alt=\"place in camera\"></button>\r\n</div>","<div id=\"chat\" class=\"box\">\r\n\t<div id=\"messages\"/>\r\n\t<input id=\"inputChat\" type=\"text\" style=\"margin-bottom:0;margin-top:var(--box-padding)\">\r\n</div>","<script>\r\n\tdocument.onkeydown = function(e) {\r\n\t\tif(e.key === \"Escape\" && document.activeElement.tagName !== \"INPUT\") {\r\n\t\t\tesc.style.display = (esc.style.display==\"block\") ? \"none\":\"block\";\r\n\t\t\twinCredits.style.display = \"none\";\r\n\t\t\twinSettings.style.display = \"none\"\r\n\t\t}\r\n\t}\r\n\r\n\t// should probably be switch case?\r\n\tfunction escReturn() {\r\n\t\tesc.style.display = \"none\"\r\n\t}\r\n\tfunction escCredits() {\r\n\t\tesc.style.display = \"none\";\r\n\t\twinCredits.style.display = \"block\"\r\n\t}\r\n\tfunction escSettings() {\r\n\t\tesc.style.display = \"none\";\r\n\t\twinSettings.style.display = \"block\"\r\n\t}\r\n\r\n</script>\r\n\r\n<div id=\"esc\">\r\n\t<div id=\"escMenu\" class=\"box center\">\r\n\t\t<button id=\"escReturn\" class=\"escButton\" on:click={escReturn}>Return</button>\r\n\t\t<button id=\"escCredits\" class=\"escButton\" on:click={escCredits}>Credits</button>\r\n\t\t<button id=\"escSettings\" class=\"escButton\" on:click={escSettings}>Settings</button>\r\n\t\t<br>\r\n\t\t<div style=\"display:flex;flex-direction:row;width:auto\">\r\n\t\t\t<a href=\"https://github.com/ado1928/ado-cubes\" target=\"_blank\" rel=\"noopener noreferrer\">Source code</a>&nbsp•&nbsp<a href=\"https://discord.gg/rNMTeADfnc\" target=\"_blank\" rel=\"noopener noreferrer\">Discord server</a>\r\n\t\t</div>\r\n\t</div>\r\n</div>","<script>\r\n\tfunction escBack() {\r\n\t\tescExit();\r\n\t\tesc.style.display = \"flex\"\r\n\t}\r\n\tfunction escExit() {\r\n\t\twinSettings.style.display = \"none\";\r\n\t\twinCredits.style.display = \"none\"\r\n\t}\r\n</script>\r\n\r\n<div style=\"display:flex;justify-content:space-between;align-items:center;padding:4px 4px;margin-bottom:12px\">\r\n\t<button class=\"icoButton icoNav\" on:click={escBack}><img src=\"./images/icons/left arrow.svg\" alt=\"<=\"></button>\r\n\t<h2 style=\"margin:0;\"><slot/></h2>\r\n\t<button class=\"icoButton icoNav\" on:click={escExit}><img src=\"./images/icons/exit.svg\" alt=\"X\"></button>\r\n</div>","<script>\r\n\tlet src = \"./images/logo/adocubes-full.svg\";\r\n\tlet style = \"position:absolute;transform:translate(-50%, -174px);left:50%;pointer-events:none\";\r\n\r\n\twindow.onload = function() {\r\n\t\tif (miscEnableRandomLogos.checked) {\r\n\t\t\tif (Math.floor(Math.random() * 70) == 1) { src = \"./images/logo/odacebus.svg\" } else\r\n\t\t\tif (Math.floor(Math.random() * 900) == 1) { src = \"./images/logo/aaaaaaaa.svg\" } else\r\n\t\t\tif (Math.floor(Math.random() * 727) == 1) {\r\n\t\t\t\tsrc = \"./images/logo/ado!.svg\";\r\n\t\t\t\tstyle = \"position:absolute;transform:translate(-50%, -164px);left:50%;pointer-events:none\"\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<div id=\"winWelcome\" class=\"box center\" style=\"top:62%\">\r\n\t<div>\r\n\t\t<img id=\"welcomeLogo\" {src} {style}>\r\n\t</div>\r\n\t<br><br><br>\r\n\tNickname: <input id=\"inputUsername\" type=\"text\"><br>\r\n\t<p id=\"noNeedToVerify\" style=\"display:none;\">It's seems you have disabled verification.<br>Please note that you won't be able to connect to the server.<br></p><br>\r\n\r\n\t<strong>important: </strong>Check controls by pressing Escape, click on Settings, and look at Input category.<br><br>\r\n\r\n\t<strong>note: </strong>iocaptcha at this time is a bit iffy.<br>If a captcha is a too hard for you, either refresh page or report it.<br>Not entirely sure if reporting even works.\r\n\r\n\t<p id=\"captchaPlease\" style=\"display:none;\"><br>Please take the captcha! If you can't see it, please refresh page.</p>\r\n\t<div class=\"io-captcha\" data-pubkey=\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADO\" data-theme=\"dark\" data-scale=\"1.0\" data-font=\"mono\" data-callback-solve=\"solve\" data-widgetid=\"iocaptcha\"/>\r\n</div>","<script>\r\n\timport { onMount } from 'svelte';\r\n\r\n\tlet notfunctional = \"./images/icons/not functional.svg\";\r\n\tlet requiresrefresh = \"./images/icons/requires refresh.svg\";\r\n\r\n\tfunction HexToRGB(hex) {\r\n\t\tlet r = parseInt(hex.slice(1, 3), 16);\r\n\t\tlet g = parseInt(hex.slice(3, 5), 16);\r\n\t\tlet b = parseInt(hex.slice(5, 7), 16);\r\n\r\n\t\treturn `${r} ${g} ${b}`\r\n\t};\r\n\r\n\tonMount(() => {\r\n\t\tfunction loadSettings() {\r\n\t\t\tlet pref = JSON.parse(localStorage.getItem('settings'));\r\n\t\t\tfor (let i = 0; i < Object.keys(pref).length; i++) {\r\n\t\t\t\tconsole.log(Object.keys(pref)[i] + \" = \" + Object.values(pref)[i]);\r\n\t\t\t\tif (Object.values(pref)[i] == (true || false)) {\r\n\t\t\t\t\tdocument.getElementById(Object.keys(pref)[i]).checked = Object.values(pref)[i]\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdocument.getElementById(Object.keys(pref)[i]).value = Object.values(pref)[i]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tloadSettings();\r\n\t\tsmth();\r\n\t});\r\n\r\n\tlet audioMusicVolume = \"100\";\r\n\tlet audioSfxVolume = \"100\";\r\n\tlet audioUiVolume = \"100\";\r\n\r\n\tfunction applySettings() {\r\n\t\tconst storeSettings = {\r\n\t\t\tgeneralLanguage: generalLanguage.value,\r\n\r\n\t\t\tinputMoveUp: inputMoveUp.value,\r\n\t\t\tinputMoveDown: inputMoveDown.value,\r\n\t\t\tinputMoveForward: inputMoveForward.value,\r\n\t\t\tinputMoveLeft: inputMoveLeft.value,\r\n\t\t\tinputMoveBackward: inputMoveBackward.value,\r\n\t\t\tinputMoveRight: inputMoveRight.value,\r\n\t\t\tinputSecondaryMoveForward: inputSecondaryMoveForward.value,\r\n\t\t\tinputSecondaryMoveLeft: inputSecondaryMoveLeft.value,\r\n\t\t\tinputSecondaryMoveBackward: inputSecondaryMoveBackward.value,\r\n\t\t\tinputSecondaryMoveRight: inputSecondaryMoveRight.value,\r\n\r\n\t\t\tinputPlaceCubes: inputPlaceCubes.value,\r\n\t\t\tinputRemoveCubes: inputRemoveCubes.value,\r\n\r\n\t\t\tinputIncreaseCameraSpeed: inputIncreaseCameraSpeed.value,\r\n\t\t\tinputDecreaseCameraSpeed: inputDecreaseCameraSpeed.value,\r\n\t\t\tinputResetCameraSpeed: inputResetCameraSpeed.value,\r\n\t\t\tinputIncreaseCameraZoom: inputIncreaseCameraZoom.value,\r\n\t\t\tinputDecreaseCameraZoom: inputDecreaseCameraZoom.value,\r\n\t\t\tinputResetCameraZoom: inputResetCameraZoom.value,\r\n\r\n\t\t\tinputToggleGrid: inputToggleGrid.value,\r\n\t\t\tinputPaletteRowScroll: inputPaletteRowScroll.value,\r\n\t\t\tinputSettingsShortcut: inputSettingsShortcut.value,\r\n\t\t\tinputDisablePR: inputDisablePR.checked,\r\n\r\n\t\t\taudioMusicVolume: audioMusicVolume,\r\n\t\t\taudioSfxVolume: audioSfxVolume,\r\n\t\t\taudioUiVolume: audioUiVolume,\r\n\t\t\taudioEnableMusic: audioEnableMusic.checked,\r\n\t\t\taudioDisablePR: audioDisablePR.checked,\r\n\t\t\taudioDisableUI: audioDisableUI.checked,\r\n\r\n\t\t\tperformanceEnableClouds: performanceEnableClouds.checked,\r\n\r\n\t\t\tmiscEnableRandomLogos: miscEnableRandomLogos.checked,\r\n\r\n\t\t\tthemeChatWidth: themeChatWidth.value,\r\n\t\t\tthemeChatMaxHeight: themeChatMaxHeight.value,\r\n\t\t\tthemeDisableBgBlur: themeDisableBgBlur.checked,\r\n\t\t\tthemeDisableTextShadows: themeDisableTextShadows.checked\r\n\t\t};\r\n\t\tlocalStorage.setItem('settings', JSON.stringify(storeSettings));\r\n\t\tsmth()\r\n\t};\r\n\tfunction smth() {\r\n\t\tdocument.querySelector(\":root\").style.setProperty(\"--chat-width\", themeChatWidth.value);\r\n\t\tdocument.querySelector(\":root\").style.setProperty(\"--chat-maxheight\", themeChatMaxHeight.value)\r\n\t};\r\n\tfunction defaultSettings() { localStorage.clear(); history.go(0) };\r\n\r\n\tconst onKeyDown = function(event) { surenot.value = event.code };\r\n\r\n\twindow.onload = function() { notsure.addEventListener('keydown', onKeyDown); }\r\n</script>\r\n\r\n<div id=\"winSettings\" class=\"box win\">\r\n\t<slot/>\r\n\t<div style=\"overflow-y:scroll;height:calc(var(--innerHeight) - 128px)\">\r\n\t\t<h2 style=\"margin:0\">legend</h2>\r\n\t\t<div class=\"settingsSection\">\r\n\t\t\t<img src={notfunctional}> - Not functional<br>\r\n\t\t\t<img src={requiresrefresh}> - Requires refresh<br>\r\n\t\t\t<button id=\"notsure\">Click this button, and press any key</button>\r\n\t\t\t<input id=\"surenot\" type=\"text\">\r\n\t\t</div>\r\n\r\n\t\t<h2>general</h2>\r\n\t\t<div class=\"settingsSection\"><img src={notfunctional}> Language\r\n\t\t\t<select id=\"generalLanguage\">\r\n\t\t\t\t<option value=\"english\">English</option>\r\n\t\t\t\t<option value=\"onlyEnglish\">Only English.</option>\r\n\t\t\t</select>\r\n\t\t</div>\r\n\r\n\t\t<h2>input</h2>\r\n\t\t<div id=\"inputDesktop\" class=\"settingsSection\">\r\n\t\t\t<h3>movement</h3>\r\n\t\t\t\t<div><img src={notfunctional}> Movement method\r\n\t\t\t\t\t<select id=\"inputMovement\" value=\"both\">\r\n\t\t\t\t\t\t<option value=\"wasd\">WASD</option>\r\n\t\t\t\t\t\t<option value=\"arrow\">Arrows</option>\r\n\t\t\t\t\t\t<option value=\"both\">Both</option>\r\n\t\t\t\t\t\t<option value=\"custom\">Custom</option>\r\n\t\t\t\t\t\t<option value=\"customsecondary\">Custom with secondary</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t\t<div id=\"customMovement\">\r\n\t\t\t\t\t\t<input id=\"inputMoveForward\" type=\"text\" value=\"KeyW\">\r\n\t\t\t\t\t\t<input id=\"inputMoveLeft\" type=\"text\" value=\"KeyA\">\r\n\t\t\t\t\t\t<input id=\"inputMoveBackward\" type=\"text\" value=\"KeyS\">\r\n\t\t\t\t\t\t<input id=\"inputMoveRight\" type=\"text\" value=\"KeyD\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div id=\"customSecondaryMovement\">\r\n\t\t\t\t\t\t<input id=\"inputSecondaryMoveForward\" type=\"text\" value=\"ArrowUp\">\r\n\t\t\t\t\t\t<input id=\"inputSecondaryMoveLeft\" type=\"text\" value=\"ArrowLeft\">\r\n\t\t\t\t\t\t<input id=\"inputSecondaryMoveBackward\" type=\"text\" value=\"ArrowDown\">\r\n\t\t\t\t\t\t<input id=\"inputSecondaryMoveRight\" type=\"text\" value=\"ArrowRight\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>Move up <input id=\"inputMoveUp\" type=\"text\" value=\"Space\"></div>\r\n\t\t\t\t<div>Move down <input id=\"inputMoveDown\" type=\"text\" value=\"ShiftLeft\"></div>\r\n\t\t\t<h3>cube placing</h3>\r\n\t\t\t\t<div>Place cubes <input id=\"inputPlaceCubes\" type=\"text\" value=\"KeyX\"></div>\r\n\t\t\t\t<div>Remove cubes <input id=\"inputRemoveCubes\" type=\"text\" value=\"KeyC\"></div>\r\n\t\t\t<h3>camera</h3>\r\n\t\t\t\t<div>Increase camera speed <input id=\"inputIncreaseCameraSpeed\" type=\"text\" value=\"BracketRight\"></div>\r\n\t\t\t\t<div>decrease camera speed <input id=\"inputDecreaseCameraSpeed\" type=\"text\" value=\"BracketLeft\"></div>\r\n\t\t\t\t<div>Reset camera speed <input id=\"inputResetCameraSpeed\" type=\"text\" value=\"Backslash\"></div>\r\n\t\t\t\t<div>Increase camera zoom <input id=\"inputIncreaseCameraZoom\" type=\"text\" value=\"Equal\"></div>\r\n\t\t\t\t<div>Decrease camera zoom <input id=\"inputDecreaseCameraZoom\" type=\"text\" value=\"Minus\"></div>\r\n\t\t\t\t<div>Reset camera zoom <input id=\"inputResetCameraZoom\" type=\"text\" value=\"Quote\"></div>\r\n\t\t\t<h3>other</h3>\r\n\t\t\t\t<div>Toggle grid <input id=\"inputToggleGrid\" type=\"text\" value=\"KeyG\"></div>\r\n\t\t\t\t<div>Palette row scroll <input id=\"inputPaletteRowScroll\" type=\"text\" value=\"AltLeft\"></div>\r\n\t\t\t\t<div>Settings shortcut <input id=\"inputSettingsShortcut\" type=\"text\" value=\"KeyL\"></div>\r\n\t\t\t\t<div>Disable mouse place and remove <input id=\"inputDisablePR\" type=\"checkbox\"></div>\r\n\t\t<div id=\"inputMobile\" class=\"settingsSection\">Not entirely sure what to put here for mobile rn.</div>\r\n\t\t</div> \r\n\r\n\t\t<h2>audio</h2>\r\n\t\t<div class=\"settingsSection\">\r\n\t\t\t<div><img src={notfunctional}> Music {audioMusicVolume} <input id=\"audioMusicVolume\" class=\"slider\" type=\"range\" bind:value={audioMusicVolume}></div>\r\n\t\t\t<div><img src={notfunctional}> SFX {audioSfxVolume} <input id=\"audioSfxVolume\" class=\"slider\" type=\"range\" bind:value={audioSfxVolume}></div>\r\n\t\t\t<div><img src={notfunctional}> UI {audioUiVolume} <input id=\"audioUiVolume\" class=\"slider\" type=\"range\" bind:value={audioUiVolume}></div>\r\n\r\n\t\t\t<div><img src={requiresrefresh}> Enable music <input id=\"audioEnableMusic\" type=\"checkbox\"></div>\r\n\t\t\t<div>Disable place and remove sounds <input id=\"audioDisablePR\" type=\"checkbox\"></div>\r\n\t\t\t<div>Disable UI sounds <input id=\"audioDisableUI\" type=\"checkbox\"></div>\r\n\t\t</div>\r\n\r\n\t\t<h2>performance</h2>\r\n\t\t<div class=\"settingsSection\">\r\n\t\t\t<div><img src={notfunctional}> Enable clouds <input id=\"performanceEnableClouds\" type=\"checkbox\"></div>\r\n\t\t</div>\r\n\r\n\t\t<h2>miscellaneous</h2>\r\n\t\t<div class=\"settingsSection\">\r\n\t\t\t<div><img src={requiresrefresh}> Enable random logos in welcome <input id=\"miscEnableRandomLogos\" type=\"checkbox\"></div>\r\n\t\t</div>\r\n\r\n\t\t<h2>appearance</h2>\r\n\t\t<div class=\"settingsSection\">\r\n\t\t\t<div><strong>note: </strong>Blur does not properly work in Firefox</div>\r\n\t\t\t<div>Chat width <input id=\"themeChatWidth\" type=\"text\" value=\"440px\"></div>\r\n\t\t\t<div>Chat max height <input id=\"themeChatMaxHeight\" type=\"text\" value=\"480px\"></div>\r\n\t\t\t<div><img src={notfunctional}> Disable background blur <input id=\"themeDisableBgBlur\" type=\"checkbox\"></div>\r\n\t\t\t<div><img src={notfunctional}> Disable text shadows <input id=\"themeDisableTextShadows\" type=\"checkbox\"></div>\r\n\t\t</div>\r\n\t</div>\r\n\t<button id=\"applySettings\" on:click={applySettings}>Apply</button> <button on:click={defaultSettings}>Default settings</button>\r\n</div>","<div id=\"winCredits\" class=\"box win\">\r\n\t<slot/>\r\n\t<div style=\"text-align:center\">\r\n\t\t<br><img src=\"./images/logo/adocubes.svg\" alt=\"adocubes\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t<br><br>\r\n\t\t<h2>developers</h2>\r\n\t\t<table class=\"credits\">\r\n\t\t\t<tr>\r\n\t\t\t\t<td><a href=\"https://github.com/ado1928\">Ado1928</a></td>\r\n\t\t\t\t<td><img src=\"https://github.com/ado1928.png\" height=\"20\"></td>\r\n\t\t\t\t<td>Creator</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<td><a href=\"https://github.com/ifritdiezel\">ifritdiezel</a></td>\r\n\t\t\t\t<td><img src=\"https://github.com/ifritdiezel.png\" height=\"20\"></td>\r\n\t\t\t\t<td>Back-End</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<td><a href=\"https://github.com/macimas\">macimas</a></td>\r\n\t\t\t\t<td><img src=\"https://github.com/macimas.png\" height=\"20\"></td>\r\n\t\t\t\t<td>Front-End</td>\r\n\t\t\t</tr>\r\n\t\t</table><br>\r\n\t\t<h2>contributors</h2>\r\n\t\t<table class=\"credits\">\r\n\t\t\t<tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<td><a href=\"https://github.com/hyxud\">hyxud</a></td>\r\n\t\t\t\t<td><img src=\"https://github.com/hyxud.png\" height=\"20\"></td>\r\n\t\t\t\t<td>Mouse placing</td>\r\n\t\t\t</tr>\r\n\t\t</table><br>\r\n\t\tMade with <a href=\"https://nodejs.org\" target=\"_blank\" rel=\"noopener noreferrer\">Node.js</a>, <a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener noreferrer\">Three.js</a>, and <a href=\"https://svelte.dev\" target=\"_blank\" rel=\"noopener noreferrer\">Svelte</a><br>\r\n\t\tSounds generated with <a href=\"https://sfxr.me\">jsfxr</a>\r\n\t</div>\r\n</div>","<script>\t\r\n\timport Palette from './ui/canvas/Palette.svelte'\r\n\timport Coordinates from './ui/canvas/Coordinates.svelte';\r\n\timport SwitchPlacement from './ui/canvas/SwitchPlacement.svelte'\r\n\timport Chat from './ui/canvas/Chat.svelte';\r\n\r\n\timport Esc from './ui/esc/Esc.svelte';\r\n\timport EscWinNavs from './ui/esc/EscWinNavs.svelte';\r\n\r\n\timport Welcome from './ui/misc/Welcome.svelte';\r\n\timport Settings from './ui/misc/Settings.svelte';\r\n\timport Credits from './ui/misc/Credits.svelte'\r\n</script>\r\n\r\n<Welcome/>\r\n\r\n<main>\r\n\t<div id=\"uiCanvas\">\r\n\t\t<Palette/>\r\n\t\t<SwitchPlacement/>\r\n\t\t<Coordinates/>\r\n\t\t<Chat/>\r\n\t\t<img id=\"crosshair\" class=\"center\" src=\"./images/svgs/crosshair.svg\" alt=\"+\">\r\n\t</div>\r\n\r\n\t<div id=\"mobileControls\">\r\n\t\t<div id=\"joyMovementDiv\" style=\"position:absolute;bottom:6px;left:6px;width:200px;height:200px\"/>\r\n\t\t<div id=\"joyCameraDiv\" style=\"position:absolute;bottom:6px;right:6px;width:200px;height:200px\"/>\r\n\t</div>\r\n\r\n\t<Esc/>\r\n\t<Settings><EscWinNavs>settings</EscWinNavs></Settings>\r\n\t<Credits><EscWinNavs>credits</EscWinNavs></Credits>\r\n</main>","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n\ttarget: document.body\r\n});\r\n\r\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","set_style","key","important","style","removeProperty","setProperty","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","callback","has","add","clear","fragment","before_update","after_update","outroing","transition_in","block","local","delete","transition_out","o","outros","c","d","create_component","mount_component","customElement","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","div50","div1","div","div2","button0","button1","button2","br","div0","escReturn","escCredits","escSettings","esc","display","winCredits","winSettings","onkeydown","e","activeElement","tagName","h2","dispose","escBack","escExit","img","br0","br1","br2","br3","p0","br6","strong0","br7","br8","strong1","br9","br10","p1","window","onload","miscEnableRandomLogos","checked","floor","random","$$invalidate","notfunctional","img0","img0_src_value","requiresrefresh","img1","img1_src_value","img2","img2_src_value","img3","img3_src_value","img4","img4_src_value","img5","img5_src_value","img6","img6_src_value","img7","img7_src_value","img8","img8_src_value","img9","img9_src_value","img10","img10_src_value","img11","img11_src_value","div39","div38","h20","input0","h21","select0","option0","option1","h22","div20","h30","div4","select1","option2","option3","option4","option5","option6","select","option","__value","selected","selectedIndex","div3","div5","div6","h31","div7","div8","h32","div9","div10","div11","div12","div13","div14","h33","div15","div16","div17","div18","div19","h23","div27","div21","input23","div22","input24","div23","input25","div24","input26","div25","div26","h24","div29","div28","input29","h25","div31","div30","input30","h26","div37","div32","div33","div34","div35","input33","div36","input34","defaultSettings","smth","querySelector","themeChatWidth","themeChatMaxHeight","localStorage","history","go","pref","JSON","parse","getItem","console","log","values","getElementById","loadSettings","audioMusicVolume","audioSfxVolume","audioUiVolume","onKeyDown","surenot","code","notsure","storeSettings","generalLanguage","inputMoveUp","inputMoveDown","inputMoveForward","inputMoveLeft","inputMoveBackward","inputMoveRight","inputSecondaryMoveForward","inputSecondaryMoveLeft","inputSecondaryMoveBackward","inputSecondaryMoveRight","inputPlaceCubes","inputRemoveCubes","inputIncreaseCameraSpeed","inputDecreaseCameraSpeed","inputResetCameraSpeed","inputIncreaseCameraZoom","inputDecreaseCameraZoom","inputResetCameraZoom","inputToggleGrid","inputPaletteRowScroll","inputSettingsShortcut","inputDisablePR","audioEnableMusic","audioDisablePR","audioDisableUI","performanceEnableClouds","themeDisableBgBlur","themeDisableTextShadows","setItem","stringify","main","body"],"mappings":"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"}